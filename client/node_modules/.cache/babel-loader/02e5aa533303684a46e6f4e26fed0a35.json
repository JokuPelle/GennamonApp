{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jokup\\\\Documents\\\\Node projects\\\\Project1\\\\Git\\\\Gennamon1\\\\Helpme\\\\client\\\\src\\\\components\\\\pages\\\\Userpage.js\";\nimport React, { Component } from 'react'; //Import boostrap and app css files\n\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"../../App.css\";\nimport Postlist from \"../posts/Postlist\";\nimport Pagebuttons from \"../signin/Pagebuttons\";\nimport Container from 'react-bootstrap/Container';\n\nclass Userpage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.verifyExistingUser = () => {\n      const checkUser = this.props.match.params.id;\n      fetch(\"api/check/\" + checkUser).then(res => res.json()).then(data => {\n        this.setState({\n          user: data.users[0].username\n        });\n\n        if (data.isThisUser) {\n          this.setState({\n            isYou: true,\n            you: \" (You)\"\n          });\n        } else {\n          this.setState({\n            isYou: false,\n            you: \"\"\n          });\n        }\n      });\n    };\n\n    this.updateWindowDimensions = () => {\n      this.setState({\n        screenWidth: window.innerWidth\n      });\n    };\n\n    this.state = {\n      user: \"\",\n      isYou: false,\n      you: \"\",\n      screenWidth: null\n    };\n  }\n\n  componentDidMount() {\n    this.verifyExistingUser();\n    window.addEventListener(\"resize\", this.updateWindowDimensions);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateWindowDimensions);\n  } //Send url-mode name to postlist sice that's only used in a fecth request\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"text-center loginStatus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, decodeURIComponent(this.props.match.params.id), \"'s Page\", this.state.you), React.createElement(Pagebuttons, {\n      isYou: this.state.isYou,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"break\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Postlist, {\n      singleUser: true,\n      user: this.props.match.params.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Userpage;","map":{"version":3,"sources":["C:/Users/jokup/Documents/Node projects/Project1/Git/Gennamon1/Helpme/client/src/components/pages/Userpage.js"],"names":["React","Component","Postlist","Pagebuttons","Container","Userpage","constructor","props","verifyExistingUser","checkUser","match","params","id","fetch","then","res","json","data","setState","user","users","username","isThisUser","isYou","you","updateWindowDimensions","screenWidth","window","innerWidth","state","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","render","decodeURIComponent"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC,C,CACA;;AACA,OAAO,kCAAP;AACA,OAAO,eAAP;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AAEA,OAAOC,SAAP,MAAsB,2BAAtB;;AAGA,MAAMC,QAAN,SAAuBJ,SAAvB,CAAiC;AAC7BK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAUnBC,kBAVmB,GAUE,MAAM;AACvB,YAAMC,SAAS,GAAG,KAAKF,KAAL,CAAWG,KAAX,CAAiBC,MAAjB,CAAwBC,EAA1C;AACAC,MAAAA,KAAK,CAAC,eAAaJ,SAAd,CAAL,CACKK,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUG,IAAI,IAAI;AACV,aAAKC,QAAL,CAAc;AAACC,UAAAA,IAAI,EAAEF,IAAI,CAACG,KAAL,CAAW,CAAX,EAAcC;AAArB,SAAd;;AACA,YAAIJ,IAAI,CAACK,UAAT,EAAqB;AACjB,eAAKJ,QAAL,CAAc;AAACK,YAAAA,KAAK,EAAE,IAAR;AAAcC,YAAAA,GAAG,EAAE;AAAnB,WAAd;AACH,SAFD,MAEO;AACH,eAAKN,QAAL,CAAc;AAACK,YAAAA,KAAK,EAAE,KAAR;AAAeC,YAAAA,GAAG,EAAE;AAApB,WAAd;AACH;AACJ,OATL;AAUH,KAtBkB;;AAAA,SAwBnBC,sBAxBmB,GAwBM,MAAM;AAC3B,WAAKP,QAAL,CAAc;AAACQ,QAAAA,WAAW,EAAEC,MAAM,CAACC;AAArB,OAAd;AACH,KA1BkB;;AAEf,SAAKC,KAAL,GAAa;AACTV,MAAAA,IAAI,EAAE,EADG;AAETI,MAAAA,KAAK,EAAE,KAFE;AAGTC,MAAAA,GAAG,EAAE,EAHI;AAITE,MAAAA,WAAW,EAAE;AAJJ,KAAb;AAMH;;AAoBDI,EAAAA,iBAAiB,GAAE;AACf,SAAKtB,kBAAL;AACAmB,IAAAA,MAAM,CAACI,gBAAP,CAAwB,QAAxB,EAAkC,KAAKN,sBAAvC;AACH;;AAEDO,EAAAA,oBAAoB,GAAG;AACnBL,IAAAA,MAAM,CAACM,mBAAP,CAA2B,QAA3B,EAAqC,KAAKR,sBAA1C;AACH,GApC4B,CAsC7B;;;AACAS,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,yBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyCC,kBAAkB,CAAC,KAAK5B,KAAL,CAAWG,KAAX,CAAiBC,MAAjB,CAAwBC,EAAzB,CAA3D,aAAgG,KAAKiB,KAAL,CAAWL,GAA3G,CADJ,EAEI,oBAAC,WAAD;AAAa,MAAA,KAAK,EAAE,KAAKK,KAAL,CAAWN,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,EAII,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,QAAD;AAAU,MAAA,UAAU,EAAE,IAAtB;AAA4B,MAAA,IAAI,EAAE,KAAKhB,KAAL,CAAWG,KAAX,CAAiBC,MAAjB,CAAwBC,EAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAJJ,CADJ;AAUH;;AAlD4B;;AAoDjC,eAAeP,QAAf","sourcesContent":["import React , {Component} from 'react';\r\n//Import boostrap and app css files\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"../../App.css\";\r\nimport Postlist from \"../posts/Postlist\";\r\nimport Pagebuttons from \"../signin/Pagebuttons\";\r\n\r\nimport Container from 'react-bootstrap/Container';\r\n\r\n\r\nclass Userpage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: \"\",\r\n            isYou: false,\r\n            you: \"\",\r\n            screenWidth: null\r\n        };\r\n    }\r\n\r\n    verifyExistingUser = () => {\r\n        const checkUser = this.props.match.params.id;\r\n        fetch(\"api/check/\"+checkUser)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                this.setState({user: data.users[0].username});\r\n                if (data.isThisUser) {\r\n                    this.setState({isYou: true, you: \" (You)\"});\r\n                } else {\r\n                    this.setState({isYou: false, you: \"\"});\r\n                }\r\n            })\r\n    }\r\n\r\n    updateWindowDimensions = () => {\r\n        this.setState({screenWidth: window.innerWidth});\r\n    }\r\n    \r\n    componentDidMount(){\r\n        this.verifyExistingUser();\r\n        window.addEventListener(\"resize\", this.updateWindowDimensions);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"resize\", this.updateWindowDimensions);\r\n    }\r\n    \r\n    //Send url-mode name to postlist sice that's only used in a fecth request\r\n    render() {\r\n        return(\r\n            <div className=\"App\">\r\n                <h3 className=\"text-center loginStatus\">{decodeURIComponent(this.props.match.params.id)}'s Page{this.state.you}</h3>\r\n                <Pagebuttons isYou={this.state.isYou}/>\r\n                <div className=\"break\"/>\r\n                <Container>\r\n                    <Postlist singleUser={true} user={this.props.match.params.id}/>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Userpage;\r\n"]},"metadata":{},"sourceType":"module"}