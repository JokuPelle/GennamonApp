{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jokup\\\\Documents\\\\Node projects\\\\Project1\\\\Git\\\\Gennamon1\\\\Helpme\\\\client\\\\src\\\\components\\\\posts\\\\Newpost.js\";\nimport React, { Component } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport ButtonToolbar from \"react-bootstrap/ButtonToolbar\";\nimport Form from \"react-bootstrap/Form\";\n\nclass Newpost extends Component {\n  constructor(props) {\n    super(props);\n\n    this.updateMessage = event => {\n      this.setState({\n        message: event.target.value\n      });\n    };\n\n    this.togglePostWindow = () => {\n      this.setState({\n        readyToPost: !this.state.readyToPost\n      });\n    };\n\n    this.createPost = () => {\n      if (this.state.message === \"\") alert(\"Your post needs to be atleast one character long.\");else {\n        fetch(\"api/posts/new\", {\n          method: \"POST\",\n          body: JSON.stringify({\n            username: this.props.username,\n            message: this.state.message\n          }),\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        }).then(res => res.json()).then(data => {\n          if (data.success === true) {\n            this.setState({\n              message: \"\"\n            });\n            alert(\"Post was created\");\n          } else alert(data.message);\n        });\n      }\n    };\n\n    this.state = {\n      readyToPost: false,\n      message: \"\"\n    };\n  }\n\n  render() {\n    if (this.props.username === \"\") {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"m-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"You need to be logged in to make a post\"));\n    } else if (this.state.readyToPost === false) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn m-2\",\n        onClick: this.togglePostWindow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Create new Post\"));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"m-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Post something\"), React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(Form.Control, {\n        style: {\n          height: \"100px\"\n        },\n        as: \"textarea\",\n        placeholder: \"Your message to the world...\",\n        className: \"postInput\",\n        value: this.state.message,\n        onChange: this.updateMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      })), React.createElement(ButtonToolbar, {\n        className: \"buttonRow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"\",\n        className: \"m-2\",\n        onClick: this.createPost,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Post\"), React.createElement(Button, {\n        variant: \"\",\n        className: \"m-2\",\n        onClick: this.togglePostWindow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Cancel\")));\n    }\n  }\n\n}\n\nexport default Newpost;","map":{"version":3,"sources":["C:/Users/jokup/Documents/Node projects/Project1/Git/Gennamon1/Helpme/client/src/components/posts/Newpost.js"],"names":["React","Component","Button","ButtonToolbar","Form","Newpost","constructor","props","updateMessage","event","setState","message","target","value","togglePostWindow","readyToPost","state","createPost","alert","fetch","method","body","JSON","stringify","username","headers","then","res","json","data","success","render","height"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport ButtonToolbar from \"react-bootstrap/ButtonToolbar\";\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nclass Newpost extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            readyToPost: false,\r\n            message: \"\"\r\n        };\r\n    }\r\n\r\n    updateMessage = (event) => {\r\n        this.setState({message: event.target.value});\r\n    }\r\n\r\n    togglePostWindow = () => {\r\n        this.setState({readyToPost: !this.state.readyToPost});\r\n    }\r\n\r\n    createPost = () => {\r\n        if (this.state.message === \"\") alert(\"Your post needs to be atleast one character long.\");\r\n        else {\r\n            fetch(\"api/posts/new\", {\r\n                method: \"POST\",\r\n                body: JSON.stringify({\r\n                    username: this.props.username,\r\n                    message: this.state.message\r\n                }),\r\n                headers: {\"Content-Type\":\"application/json\"}})\r\n                .then(res => res.json())\r\n                .then(data => {\r\n                    if (data.success === true) {\r\n                        this.setState({message: \"\"});\r\n                        alert(\"Post was created\");\r\n                    } else alert(data.message);\r\n                });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.props.username === \"\") {\r\n            return(\r\n                <div>\r\n                    <h2 className=\"m-2\">You need to be logged in to make a post</h2>\r\n                </div>\r\n            );\r\n        } else if (this.state.readyToPost === false ) {\r\n            return(\r\n                <div>\r\n                    <button className=\"btn m-2\" onClick={this.togglePostWindow}>Create new Post</button>\r\n                </div>\r\n            )\r\n        } else {\r\n            return(\r\n                <div>\r\n                    <h2 className=\"m-2\">Post something</h2>\r\n                    <Form>\r\n                        <Form.Control style={{height: \"100px\"}} as=\"textarea\"  placeholder=\"Your message to the world...\" className=\"postInput\" value={this.state.message} onChange={this.updateMessage}/>\r\n                    </Form>\r\n                    <ButtonToolbar className=\"buttonRow\">\r\n                        <Button variant=\"\" className=\"m-2\" onClick={this.createPost}>Post</Button>\r\n                        <Button variant=\"\" className=\"m-2\" onClick={this.togglePostWindow}>Cancel</Button>\r\n                    </ButtonToolbar>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default Newpost;"]},"metadata":{},"sourceType":"module"}