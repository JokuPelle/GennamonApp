{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jokup\\\\Documents\\\\Node projects\\\\Project1\\\\Git\\\\Gennamon1\\\\Helpme\\\\client\\\\src\\\\components\\\\posts\\\\Postlist.js\";\nimport React, { Component } from \"react\";\nimport OnePost from \"./OnePost\";\nimport Button from \"react-bootstrap/Button\";\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nclass Postlist extends Component {\n  constructor(props) {\n    super(props);\n\n    this.loadPosts = () => {\n      if (!this.props.singleUser) {\n        console.log(\"load all posts\");\n        fetch(\"/api/posts/load\").then(res => res.json()).then(data => {\n          this.setState({\n            posts: data.posts\n          });\n        });\n      } else {\n        console.log(\"load user posts\");\n        fetch(\"/api/posts/load?id=\" + this.props.user).then(res => res.json()).then(data => {\n          this.setState({\n            posts: data.posts\n          });\n        });\n      }\n    };\n\n    this.loadMore = () => {\n      this.setState({\n        postsShown: this.state.postsShown + this.state.morePosts\n      });\n      this.loadPosts();\n    };\n\n    this.state = {\n      postsShown: 10,\n      morePosts: 10,\n      posts: []\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"postlist mount\");\n    this.loadPosts();\n  } //xs=\"4\" md=\"3\" lg=\"2\"\n\n\n  render() {\n    const listItems = this.state.posts.slice(0, this.state.postsShown).map((item, key) => React.createElement(OnePost, {\n      key: key,\n      username: item.username,\n      message: item.message,\n      date: Date.parse(item.date),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }));\n    return React.createElement(\"div\", {\n      style: {\n        display: \"inline\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"justify-content-md-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: \"8\",\n      md: \"6\",\n      lg: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"loginStatus m-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Recent Posts\")), React.createElement(Col, {\n      xs: \"4\",\n      md: \"3\",\n      lg: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"\",\n      className: \"m-2\",\n      onClick: this.loadPosts,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Refresh\")))), listItems, React.createElement(Button, {\n      variant: \"\",\n      className: \"m-2\",\n      onClick: this.loadMore,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Load More\"));\n  }\n\n}\n\nexport default Postlist;","map":{"version":3,"sources":["C:/Users/jokup/Documents/Node projects/Project1/Git/Gennamon1/Helpme/client/src/components/posts/Postlist.js"],"names":["React","Component","OnePost","Button","Container","Row","Col","Postlist","constructor","props","loadPosts","singleUser","console","log","fetch","then","res","json","data","setState","posts","user","loadMore","postsShown","state","morePosts","componentDidMount","render","listItems","slice","map","item","key","username","message","Date","parse","date","display"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport OnePost from \"./OnePost\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nclass Postlist extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            postsShown: 10,\r\n            morePosts: 10,\r\n            posts: []\r\n        };\r\n    }\r\n\r\n    loadPosts = () => {\r\n        if (!this.props.singleUser) {\r\n            console.log(\"load all posts\");\r\n            fetch(\"/api/posts/load\")\r\n                .then(res => res.json())\r\n                .then(data => {\r\n                    this.setState({posts: data.posts});\r\n                }\r\n            );\r\n        } else {\r\n            console.log(\"load user posts\");\r\n            fetch(\"/api/posts/load?id=\"+ this.props.user)\r\n                .then(res => res.json())\r\n                .then(data => {\r\n                    this.setState({posts: data.posts});\r\n                }\r\n            );\r\n        }\r\n    }\r\n    //Problem is that it loads all the posts again instead of not currently shown ones\r\n    loadMore = () => {\r\n        this.setState({postsShown: this.state.postsShown + this.state.morePosts});\r\n        this.loadPosts();\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\"postlist mount\");\r\n        this.loadPosts();\r\n    }\r\n    //xs=\"4\" md=\"3\" lg=\"2\"\r\n    render() {\r\n        const listItems = this.state.posts.slice(0,this.state.postsShown).map((item, key) =>\r\n            <OnePost key={key} username={item.username} message={item.message} date={Date.parse(item.date)}/>);\r\n        return(\r\n            <div style={{display:\"inline\"}}>\r\n                <Container>\r\n                    <Row className=\"justify-content-md-center\">\r\n                        <Col xs=\"8\" md=\"6\" lg=\"4\">\r\n                            <h3 className=\"loginStatus m-2\">Recent Posts</h3>\r\n                        </Col>\r\n                        <Col xs=\"4\" md=\"3\" lg=\"2\">\r\n                            <Button variant=\"\" className=\"m-2\" onClick={this.loadPosts}>Refresh</Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n                {listItems }\r\n                <Button variant=\"\" className=\"m-2\" onClick={this.loadMore}>Load More</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Postlist;"]},"metadata":{},"sourceType":"module"}